@startuml
    enum DataFrequency {
        ONE_TIME_ACCESS
        CONTINUOUS
        CUSTOM
    }

    enum ModuleType {
        INPUT_PARSING
        PROCESSING
        ANALYSIS
        ACTION
    }

    abstract class ModuleIO {
        stream: boolean
        dataFrequency: DataFrequency
        dataFrequencyN: int

        consumesInput: boolean
        inputRowCount: int
        inputFormat: IOFormat[]
        associatedInputModules: id[]

        producesOutput: boolean
        outputRowCount: int
        outputFormat: IOFormat[]
        associatedOutputModules: id[]

        getOutputQueue(): queue
        {abstract} getOutput(): array
        {abstract} addInput(data: array)
    }

    class IOFormat {
        index: int
        label: string
    }

    class Resource {
        name: string
        data: b64_string
    }

    abstract class Module {
        id: id
        name: string
        description: string
        type: ModuleType
        implementation: b64_string
        resources: Resource[]
        
        getLogQueue(): queue
        getEventQueue(): queue
        {abstract} start(): void
        {abstract} stop(): void
    }

    abstract class InputParsingModule {
    }

    abstract class ProcessingModule {
    }

    abstract class AnalysisModule {
    }

    class Condition {
        moduleId: id
        outputField: int
        comparison: operator
        data: object
    }
        
    abstract class ActionModule {
        conditions: Condition[]

        {abstract} doAction(data: array): void
    }

    Module <|-- InputParsingModule
    Module <|-- ProcessingModule
    Module <|-- AnalysisModule
    Module <|-- ActionModule

    ModuleIO <|-- InputParsingModule
    ModuleIO <|-- ProcessingModule
    ModuleIO <|-- AnalysisModule

    ActionModule o-- Condition
    DataFrequency <-- ModuleIO
    IOFormat <-- ModuleIO
    ModuleType <-- Module
    Module o-- Resource

@enduml
